<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mjc.linkx.petition.IPetitionMyBatisMapper">

    <!--게시글 등록 -->
    <insert id="insert" parameterType="PetitionDto" useGeneratedKeys="true" keyProperty="id">  <!-- useGeneratedKeys 속성으로 자동생성된 키를 가져오고,
                                                                                                    keyProperty 속성에 "id" 필드를 정의하여 id 값이
                                                                                                     자동 증감되어 DB에 저장된다 -->

        INSERT INTO petition_tbl ( petiTitle
                                    , petiField
                                   , petiContent
                                    ,userId
                                    ,createDt
                                    ,endDt
                                   )
        VALUES ( #{petiTitle}
                ,#{petiField}
               , #{petiContent}
                ,#{userId}
                , CURRENT_TIMESTAMP
                ,DATE_ADD(CURRENT_TIMESTAMP,INTERVAL 7 DAY)
               )    <!-- parameterType "BoardFreeDto"를 매개변수로 받아와 해당 필드인 title, content, createId를 삽입 -->

    </insert>

    <!-- 게시글 상세정보 조회 -->
    <select id="findById" parameterType="long" resultType="PetitionDto" >
        SELECT pt.id
             , pt.petiField
             , pt.petititle
             , pt.userId
             , ut.name AS userNickName
             , date_format(pt.createDt,"%Y-%m-%d %H:%i:%s") as createDt
             , pt.peticontent
             , date_format(pt.endDt,"%Y-%m-%d %H:%i:%s") as endDt
             , pt.agreeQty

        FROM petition_tbl pt
        LEFT JOIN user_tbl ut ON pt.userId = ut.id
        WHERE pt.id = #{id}

    </select>

    <!-- 게시글 삭제 -->
    <delete id="delete" parameterType="long">
        UPDATE petition_tbl
        SET deleteYn = TRUE
        WHERE id = #{id}
    </delete>


<!-- SerchBoardDto는 기본으로 만들어 놓으신 자바 코드로 필요에 따라 상속 받아서 사용하거나 하면 될것 같음 -->


    <!-- 게시글 리스트 조회 -->
    <select id="findAllByNameContains" parameterType="SearchPetiDto" resultType="PetitionDto">
        SELECT pt.id,
               pt.petiTitle,
               pt.petiField,
               pt.petiContent,
               date_format(pt.createDt,"%Y-%m-%d %H:%i:%s") as createDt,
               date_format(pt.endDt,"%Y-%m-%d %H:%i:%s") as endDt,
               ut.name AS userNickName,
               pt.agreeQty,
               pt.playing
        FROM petition_tbl pt
        LEFT JOIN user_tbl ut ON pt.userId = ut.id
        WHERE pt.petiField LIKE CONCAT('%', #{petiField}, '%')
        <if test="searchField != null and searchName != null and !searchName.isEmpty()">
            AND
            <choose>
                <when test="searchField == 'petiTitle'">
                    pt.petiTitle LIKE CONCAT('%', #{searchName}, '%')
                </when>
                <when test="searchField == 'petiContent'">
                    pt.petiContent LIKE CONCAT('%', #{searchName}, '%')
                </when>
            </choose>
        </if>
        AND playing = true
        ORDER BY ${sortColumn} ${sortAscDesc}
        LIMIT #{rowsOnePage} OFFSET #{firstIndex}
    </select>

    <!-- 게시글 리스트 조회 -->
    <select id="findAllByNameContainsOld" parameterType="SearchPetiDto" resultType="PetitionDto">
        SELECT pt.id,
        pt.petiTitle,
        pt.petiField,
        pt.petiContent,
        date_format(pt.createDt,"%Y-%m-%d %H:%i:%s") as createDt,
        date_format(pt.endDt,"%Y-%m-%d %H:%i:%s") as endDt,
        ut.name AS userNickName,
        pt.agreeQty,
        pt.playing
        FROM petition_tbl pt
        LEFT JOIN user_tbl ut ON pt.userId = ut.id
        WHERE pt.petiField LIKE CONCAT('%', #{petiField}, '%')
        <if test="searchField != null and searchName != null and !searchName.isEmpty()">
            AND
            <choose>
                <when test="searchField == 'petiTitle'">
                    pt.petiTitle LIKE CONCAT('%', #{searchName}, '%')
                </when>
                <when test="searchField == 'petiContent'">
                    pt.petiContent LIKE CONCAT('%', #{searchName}, '%')
                </when>
            </choose>
        </if>
        AND playing = false
        ORDER BY ${sortColumn} ${sortAscDesc}
        LIMIT #{rowsOnePage} OFFSET #{firstIndex}
    </select>

    <!--전체 가져오기-->
    <select id="findAll" parameterType="SearchPetiDto" resultType="PetitionDto">
            SELECT *
            FROM petition_tbl
    </select>

    <!-- 게시글 카운트 (아마 작성자를 기준으로 작성글을 찾는것 같음-->
    <select id="countAllByContains" parameterType="SearchPetiDto" resultType="Integer">
        SELECT COUNT(*)
        FROM petition_tbl pt
        LEFT JOIN user_tbl ut ON pt.userId = ut.id
        WHERE pt.petiField LIKE CONCAT('%', #{petiField}, '%')
        <if test="searchField != null and searchName != null and !searchName.isEmpty()">
            AND
            <choose>
                <when test="searchField == 'petiTitle'">
                    pt.petiTitle LIKE CONCAT('%', #{searchName}, '%')
                </when>
                <when test="searchField == 'petiContent'">
                    pt.petiContent LIKE CONCAT('%', #{searchName}, '%')
                </when>
            </choose>
        </if>
        AND playing = true
    </select>

    <!-- 게시글 카운트 (아마 작성자를 기준으로 작성글을 찾는것 같음-->
    <select id="countAllByContainsOld" parameterType="SearchPetiDto" resultType="Integer">
        SELECT COUNT(*)
        FROM petition_tbl pt
        LEFT JOIN user_tbl ut ON pt.userId = ut.id
        WHERE pt.petiField LIKE CONCAT('%', #{petiField}, '%')
        <if test="searchField != null and searchName != null and !searchName.isEmpty()">
            AND
            <choose>
                <when test="searchField == 'petiTitle'">
                    pt.petiTitle LIKE CONCAT('%', #{searchName}, '%')
                </when>
                <when test="searchField == 'petiContent'">
                    pt.petiContent LIKE CONCAT('%', #{searchName}, '%')
                </when>
            </choose>
        </if>
        AND playing = false
    </select>

<!--조회수 증가(조회수 항목이 없으니 비활성화)
    <update id="addViewQty" parameterType="Long">
        UPDATE board_free_tbl
        SET viewQty = viewQty + 1
        WHERE deleteYn = false
        AND id = #{id}
    </update>
        -->




    <update id="updatePlaying">
        UPDATE petition_tbl
        SET playing = #{playing}
        WHERE id = #{id}
    </update>

    <!--동의자 수 상위 5개의 글을 가져오는 sql문-->
    <select id="findTopAgreedPetitions" resultType="PetitionDto">
        SELECT id,petiField,petiTitle
        FROM petition_tbl
        WHERE playing = true
        order by agreeQty DESC
        LIMIT 5

    </select>

    <!--메인에 띄울 핫한 글 표시 -->
    <select id="findHotAgreedPetitions" resultType="PetitionDto">
        SELECT
            id,
            petiTitle,
            -- petiContent 글자 수 100자로 제한, 100자 이상일 경우 '...'을 추가
            CASE
                WHEN LENGTH(petiContent) > 10 THEN CONCAT(SUBSTRING(petiContent, 1, 100), '...')
                ELSE petiContent
                END AS petiContent,
            -- D-day 계산을 위한 daysLeft 값을 가져오기 위해 사용자 정의 함수 사용
            endDt
        FROM petition_tbl
        WHERE playing = true
        ORDER BY agreeQty DESC
            LIMIT 3
    </select>


    <!--청원에 동의 기록을 추가 -->
    <insert id ="insertSignature" parameterType="SignatureDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO signatures_tbl (petiId, userId)
        VALUES (#{petiId}, #{userId})
    </insert>

    <!-- 특정 사용자가 이미 동의 했는지 확인 -->
    <select id="hasUserAgreed" parameterType="SignatureDto" resultType="boolean">
        SELECT EXISTS(
            SELECT 1
            FROM signatures_tbl
            WHERE petiId = #{petiId} AND userId = #{userId}
        )
    </select>

    <!--동의자수 증가-->
    <update id="addAgreeQty">
        UPDATE petition_tbl
        SET agreeQty = agreeQty + 1
        WHERE id = #{id}
          AND playing = true
    </update>


</mapper>
