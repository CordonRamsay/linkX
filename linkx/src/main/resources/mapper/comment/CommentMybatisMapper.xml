<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mjc.linkx.comment.ICommentMyBatisMapper">
    <insert id="insert" parameterType="CommentDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO comment_tbl (boardType,
                                       boardId,
                                       comment,
                                       createId)
        VALUES ( #{boardType},
                #{boardId},
                #{comment},
                #{createId} )
    </insert>

    <update id="update" parameterType="CommentDto">
        UPDATE comment_tbl
        SET comment = #{comment}, updateDt = #{updateDt}, boardId=#{boardId}
        WHERE id = #{id}
    </update>

    <delete id="delete">
        UPDATE comment_tbl
        SET deleteYn = true
        WHERE id = #{id}
    </delete>

    <select id="findById" resultType="CommentDto">
        SELECT id, comment, likeQty, boardId, createDt, createId, updateDt, deleteYn
        FROM comment_tbl
        WHERE id = #{id} AND deleteYn = false
    </select>

    <select id="countAllByBoardId" parameterType="SearchDto" resultType="Integer">
        SELECT count(*)
        FROM comment_tbl
        WHERE boardId = #{boardId} AND deleteYn = false
    </select>

    <update id="addLikeQty">
        UPDATE comment_tbl
        SET likeQty = likeQty + 1
        WHERE id = #{id}
          AND deleteYn = false
    </update>

    <update id="subLikeQty">
        UPDATE comment_tbl
        SET likeQty = likeQty - 1
        WHERE id = #{id}
          AND deleteYn = false
    </update>

    <select id="findAllByBoardIdTbl" parameterType="SearchCommentDto" resultType="CommentDto">
        SELECT bct.id,
               bct.comment,
               bct.likeQty,
               bct.boardId,
               bct.createDt,
               bct.createId,
               ut.nickname AS createName,
               bct.updateDt,
               bct.deleteYn,
               cl.commentId
        FROM comment_tbl bct
                 LEFT JOIN user_tbl ut ON bct.createId = ut.id
                 LEFT JOIN comment_like_tbl cl
                           ON bct.id = cl.commentId
                               AND cl.createId = #{createId}
        WHERE bct.boardId = #{boardId}
          AND bct.boardType = #{boardType}
          AND bct.deleteYn = false
        ORDER BY ${orderByWord}
            LIMIT #{rowsOnePage} OFFSET #{firstIndex}
    </select>
</mapper>